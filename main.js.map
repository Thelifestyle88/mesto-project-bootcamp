{"version":3,"file":"main.js","mappings":"mBAAA,IAAMA,EACU,0BADVA,EAEW,gBAFXA,EAGa,8BAHbA,EAIK,SAWX,SAASC,EAAeC,EAAaC,GACjC,IAAMC,EAAeF,EAAYG,cAAc,IAAD,OAAKF,EAAUG,IAAE,OAAGN,IAClEG,EAAUI,UAAUC,OAAOR,GAC3BI,EAAaG,UAAUC,OAAO,GAAD,OAAIL,EAAUG,IAAE,OAAGN,IAChDI,EAAaK,YAdA,EAejB,CAEA,SAASC,EAAMR,EAAaC,GACnBA,EAAUQ,SAASD,MAGpBT,EAAeC,EAAaC,GAlBpC,SAAwBD,EAAaC,EAAWS,GAC5C,IAAMR,EAAeF,EAAYG,cAAc,IAAD,OAAKF,EAAUG,IAAE,OAAGN,IAClEG,EAAUI,UAAUM,IAAIb,GACxBI,EAAaK,YAAcG,EAC3BR,EAAaG,UAAUM,IAAI,GAAD,OAAIV,EAAUG,IAAE,OAAGN,GACjD,CAWQc,CAAeZ,EAAaC,EAAWA,EAAUY,kBAIzD,CAQO,SAASC,EAAkBC,EAAWC,IAN7C,SAAyBD,GACrB,OAAOA,EAAUE,MAAK,SAAChB,GACnB,OAAQA,EAAUQ,SAASD,KAC/B,GACJ,CAGQU,CAAgBH,IAIhBC,EAAcX,UAAUC,OAAOR,GAC/BkB,EAAcG,gBAAgB,YAAY,KAJ1CH,EAAcX,UAAUM,IAAIb,GAC5BkB,EAAcI,aAAa,YAAY,GAK/C,CAqBO,SAASC,EAAgBrB,GAC5B,IAAMe,EAAYO,MAAMC,KAAKvB,EAAYwB,iBAAiB,uBACpDR,EAAgBhB,EAAYG,cAAc,uBAChDY,EAAUU,SAAQ,SAACxB,GACfO,EAAMR,EAAaC,GACnBF,EAAeC,EAAaC,EAChC,IACAa,EAAkBC,EAAWC,EACjC,CCzEA,IAAMU,EAAS,CACXC,QAAS,4CACTC,OAAQ,CACJC,cAAe,wCAEnBC,QAAS,CACLD,cAAe,uCACf,eAAgB,qBAIxB,SAASE,EAAcC,GACnB,OAAIA,EAAIC,GACGD,EAAIE,OAERF,EAAIE,OACNC,MAAK,SAACC,GAEH,OADAA,EAAIC,WAAaL,EAAIM,OACdC,QAAQC,OAAOJ,EAC1B,GACR,CAEO,ICtBDK,EAAWC,SAASvC,cAAc,aAEjC,SAASwC,EAAmBC,GAC/BH,EAASI,QAAQD,EACrB,CCAA,IAAME,EAAUJ,SAASvC,cAAc,YAAY4C,QAEnD,SAASC,EAAiBC,GACtB,ICmD0BC,EAAKC,EDnD/B,EAAiCF,EAAzBG,OCmDkBF,EDnDL,EAAHA,ICmDaC,EDnDL,EAAHA,ICoDvBE,EAAUH,IAAMA,EAChBG,EAAUF,IAAMA,EAChBG,EAAiB/C,YAAc4C,EAC/BI,EAAUC,EDrDd,CAGA,SAASC,EAAgBR,GACrB,IFkBaS,EAAQC,EElBfC,EAAOX,EAAIG,OAAOS,QAAQ,YAC1BC,EAAaF,EAAKzD,cAAc,0BFiBzBuD,EEhBEE,EAAKxD,GFgBCuD,EEhBGC,EAAKG,OAAOC,SAASJ,EAAKK,SFiBvCC,MAAM,GAAD,OAAIxC,EAAOC,QAAO,wBAAgB+B,GAAU,CACpDS,OAAQR,EAAU,SAAW,MAC7B7B,QAASJ,EAAOE,SAEfO,KAAKJ,IEpBTI,MAAK,SAACH,GACH4B,EAAKG,OAAS/B,EAAIoC,MAAMC,KAAI,SAACC,GAAI,OAAKA,EAAKC,GAAG,IAC9CT,EAAWvD,YAAcqD,EAAKG,OAAOS,OACjCZ,EAAKG,OAAOC,SAASJ,EAAKK,SAC1BhB,EAAIG,OAAO/C,UAAUM,IAAI,uBAEzBsC,EAAIG,OAAO/C,UAAUC,OAAO,sBAEpC,IACCmE,MAAMC,QAAQC,MACvB,CAEA,SAASC,EAAkB3B,GACvB,IAAMW,EAAOX,EAAIG,OAAOS,QAAQ,YAChCgB,eAAeC,QAAQ,eAAgBlB,EAAKxD,ICsDxCyE,eAAeE,QAAQ,iBACvBxB,EAAUyB,EDrDlB,CAGO,SAASC,EAASC,EAASC,GAC9B,IAAMvB,EAAOd,EAAQ3C,cAAc,YAAYiF,WAAU,GACnDC,EAAezB,EAAKzD,cAAc,kBACxCyD,EAAKzD,cAAc,mBAAmBI,YAAc2E,EAAQI,KACzC1B,EAAKzD,cAAc,yBAC3BI,YAAc2E,EAAQd,MAAMI,OACvCa,EAAanC,IAAMgC,EAAQK,KAC3BF,EAAalC,IAAM+B,EAAQI,KAC3B,IAAME,EAAa5B,EAAKzD,cAAc,kBACtCyD,EAAKxD,GAAK8E,EAAQX,IAClBX,EAAKK,QAAUkB,EACfvB,EAAKG,OAASmB,EAAQd,MAAMC,KAAI,SAACC,GAAI,OAAKA,EAAKC,GAAG,IAClDX,EAAK6B,SAAWP,EAAQQ,MAAMnB,IAC9B,IAAMoB,EAAc/B,EAAKzD,cAAc,mBAYvC,OAXI+E,EAAQQ,MAAMnB,MAAQX,EAAKK,SAC3B0B,EAAYtF,UAAUM,IAAI,2BAE9BuE,EAAQd,MAAM3C,SAAQ,SAAAmE,GACdA,EAAGrB,MAAQX,EAAKK,SAChBuB,EAAWnF,UAAUM,IAAI,sBAEjC,IACAgF,EAAYE,iBAAiB,QAASjB,GACtCY,EAAWK,iBAAiB,QAASpC,GACrC4B,EAAaQ,iBAAiB,QAAS7C,GAChCY,CACX,CE7DA,IAAMkC,EAAepD,SAASvC,cAAc,mBACtC4F,EAAkBrD,SAASvC,cAAc,sBACzC6F,EAAgBtD,SAASvC,cAAc,mBAQtC,SAAS8F,EAAYC,GACxBJ,EAAavF,YAAc2F,EAAKZ,KAChCS,EAAgBxF,YAAc2F,EAAKC,MACnCH,EAAc9C,IAAMgD,EAAKE,MAC7B,CDTA,IAAM/C,EAAYX,SAASvC,cAAc,gBACnCmD,EAAmBZ,SAASvC,cAAc,uBAC1CqD,EAAad,SAASvC,cAAc,gBACpCkG,EAAsB3D,SAASvC,cAAc,kCAC7CmG,EAAyB5D,SAASvC,cAAc,qCAChDoG,EAAuB7D,SAASvC,cAAc,iCAC9CqG,EAAwB9D,SAASvC,cAAc,oCAC/CsG,EAAe/D,SAASvC,cAAc,uBACtCuG,EAAkBhE,SAASvC,cAAc,qBACzCwG,EAAgBjE,SAASvC,cAAc,oBACvCyG,EAAoBlE,SAASlB,iBAAiB,wBAC9CqF,EAAanE,SAASvC,cAAc,uBACpC2G,EAAmBpE,SAASvC,cAAc,uBAC1C4G,EAAcrE,SAASvC,cAAc,kCACrC6G,EAActE,SAASvC,cAAc,sBACrC6E,EAAqBtC,SAASvC,cAAc,iBAC5C8G,EAAavE,SAASvC,cAAc,uBACpC+G,EAAoBxE,SAASvC,cAAc,4BAC3CgH,EAAmBzE,SAASvC,cAAc,8BAC1CiH,EAAiB1E,SAASvC,cAAc,8BAEvC,SAASoD,EAAU8D,GACtBA,EAAMhH,UAAUM,IAAI,gBACpB+B,SAASmD,iBAAiB,QAASyB,EACvC,CAEO,SAASC,EAAWF,GACvBA,EAAMhH,UAAUC,OAAO,gBACvBoC,SAAS8E,oBAAoB,QAASF,EAC1C,CAEA,SAASG,EAAmBxE,GACpBA,EAAIG,SAAWH,EAAIyE,eACnBH,EAAWtE,EAAIG,OAEvB,CAEA,SAASuE,EAAiBC,GAEtBL,EADcK,EAAKxE,OAAOS,QAAQ,UAEtC,CAEO,SAASgE,EAAcC,GAAkC,IAA1BC,EAAa,UAAH,6CAAG,YAC/CD,EAAOvH,YAAcwH,CACzB,CAEA,SAAST,EAAUrE,GACf,GAAgB,WAAZA,EAAI+E,IAAkB,CACtB,IAAMC,EAAcvF,SAASvC,cAAc,iBAC3C8H,GAAeV,EAAWU,EAC9B,CACJ,CAuCO,SAASC,IACZ7B,EAAoB8B,MAAQ,GAC5B7B,EAAuB6B,MAAQ,EACnC,CAEA,SAASC,IACLrB,EAAYoB,MAAQ,EACxB,C,0GE9FA,IAAME,EAAoB3F,SAASvC,cAAc,yBAC3CmI,EAAiB5F,SAASvC,cAAc,wBACxCoI,EAAa7F,SAASvC,cAAc,oBAE1CoC,QAAQiG,IAAI,CLYGtE,MAAM,GAAD,OAAIxC,EAAOC,QAAO,YAAY,CACtCwC,OAAQ,MACRrC,QAASJ,EAAOE,SAGfO,KAAKJ,GA8BHmC,MAAM,GAAD,OAAIxC,EAAOC,QAAO,SAAS,CACnCwC,OAAQ,MACRrC,QAASJ,EAAOE,SAEfO,KAAKJ,KKlDbI,MAAK,YAAmB,I,IAAA,G,EAAA,E,4CAAA,I,o2BAAjB+D,EAAI,KAAEuC,EAAK,KACfxC,EAAYC,GACZrB,eAAeC,QAAQ,SAAUoB,EAAK3B,KACtCkE,EAAMhH,SAAQ,SAAC6C,GAAI,OAAK3B,EAAmBsC,EAASX,EAAM4B,EAAK3B,KAAK,GACxE,IACCE,MAAMC,QAAQC,ON6BErD,MAAMC,KAAKmB,SAASlB,iBAAiB,iBAC7CC,SAAQ,SAACiH,GAItB,IAA2B1I,EACjBe,EACAC,EAFiBhB,EAHD0I,EAIhB3H,EAAYO,MAAMC,KAAKvB,EAAYwB,iBAAiB,uBACpDR,EAAgBhB,EAAYG,cAAc,uBAChDW,EAAkBC,EAAWC,GAC7BD,EAAUU,SAAQ,SAACxB,GACfA,EAAU4F,iBAAiB,SAAS,WAChCrF,EAAMR,EAAaC,GACnBa,EAAkBC,EAAWC,EACjC,GACJ,GAXA,IImIAyF,EAAaZ,iBAAiB,UAflC,SAA8B5C,GA9D9B,IACUW,EA8DNX,EAAI0F,iBACJd,EAAcT,EAAgB,iBHlIlB,SAACxD,GACT,OAAOM,MAAM,GAAD,OAAIxC,EAAOC,QAAO,UAAU,CACpCwC,OAAQ,OACRrC,QAASJ,EAAOI,QAChB8G,KAAMC,KAAKC,UACPlF,KAGHzB,KAAKJ,EACd,CG0HAgH,EAhEMnF,EAAO,CAAC,EACdA,EAAK0B,KAAOe,EAAoB8B,MAChCvE,EAAK2B,KAAOe,EAAuB6B,MAC5BvE,IA8DFzB,MAAK,SAACH,ID1GR,SAAiB4B,GACpBjB,EAAmBsC,EAASrB,EAAMiB,eAAeE,QAAQ,WAC7D,CCyGYiE,CAAQhH,GACRuF,EAAWZ,GACXuB,GACJ,IACCzD,MAAMC,QAAQC,OACdsE,SAAQ,kBAAMpB,EAAcT,EAAe,GACpD,IAKIV,EAAgBb,iBAAiB,UA/CrC,SAA6B5C,GAxB7B,IACUiG,EAwBNjG,EAAI0F,iBACJd,EAAcX,EAAmB,iBHzFpB,SAACgC,GACV,OAAOhF,MAAM,GAAD,OAAIxC,EAAOC,QAAO,YAAY,CACtCwC,OAAQ,QACRrC,QAASJ,EAAOI,QAChB8G,KAAMC,KAAKC,UACPI,KAGH/G,KAAKJ,EACd,CGiFAgH,EA1BMG,EAAU,CAAC,EACjBA,EAAQ5D,KAAOiB,EAAqB4B,MACpCe,EAAQ/C,MAAQK,EAAsB2B,MAC/Be,IAwBF/G,MAAK,SAAC+G,GACHjD,EAAYiD,GACZ3B,EAAWT,EACf,IACCrC,MAAMC,QAAQC,OACdsE,SAAQ,kBAAM/B,EAAkB3G,YAAc,WAAW,GAClE,IAsCIsG,EAAWhB,iBAAiB,UApChC,SAA6B5C,GH1EX,IAACsC,EG2EftC,EAAI0F,iBACJd,EAAcV,EAAkB,kBH5EjB5B,EG+CAwB,EAAYoB,MH9ChBjE,MAAM,GAAD,OAAIxC,EAAOC,QAAO,mBAAmB,CAC7CwC,OAAQ,QACRrC,QAASJ,EAAOI,QAChB8G,KAAMC,KAAKC,UAAU,CACjB1C,OAAQ,GAAF,OAAKb,OAGdpD,KAAKJ,IGsETI,MAAK,SAAA+G,GACFjD,EAAYiD,GACZd,IACAb,EAAWP,EACf,IACCvC,MAAMC,QAAQC,OACdsE,SAAQ,kBAAMpB,EAAcV,EAAiB,GACtD,IA0BIF,EAAWpB,iBAAiB,UAjHhC,SAAiC5C,GAC7BA,EAAI0F,iBACJ,IHRajF,EGQPyF,EAAetE,eAAeE,QAAQ,gBACtCqE,EAAc1G,SAAS2G,eAAeF,IHT/BzF,EGUEyF,EHRJjF,MAAM,GAAD,OAAIxC,EAAOC,QAAO,iBAAS+B,GAAU,CAC7CS,OAAQ,SACRrC,QAASJ,EAAOE,SAEfO,KAAKJ,IGKTI,MAAK,WACFiH,EAAY9I,SAXpBiH,EAAWvC,GACXH,eAAeyE,WAAW,eAYtB,IACC7E,MAAMC,QAAQC,MACvB,IAwGIrD,MAAMC,KAAKmB,SAASlB,iBAAiB,WAAWC,SAAQ,SAAC4F,GACrDA,EAAMxB,iBAAiB,QAAS4B,EACpC,IACAnG,MAAMC,KAAKqF,GAAmBnF,SAAQ,SAAC8H,GACnCA,EAAY1D,iBAAiB,QAAS8B,EAC1C,IEvKJU,EAAkBxC,iBAAiB,SF0G5B,WALP,IAA0BK,ICrHf,CAAEZ,KAFIQ,EAAavF,YAEX4F,MADDJ,EAAgBxF,aDuH9BgG,EAAqB4B,MAAQjC,EAAKZ,KAClCkB,EAAsB2B,MAAQjC,EAAKC,MAKnC9E,EAAgBqF,GAChBnD,EAAUuD,EACd,IE5GAwB,EAAezC,iBAAiB,SFuIzB,WACHqC,IACA7G,EAAgBoF,GAChBlD,EAAUoD,EACd,IEzIA4B,EAAW1C,iBAAiB,SF8DrB,WACHuC,IACA/G,EAAgBwF,GAChBtD,EAAUyD,EACd,G","sources":["webpack://mesto-project-bootcamp/./components/validate.js","webpack://mesto-project-bootcamp/./components/api.js","webpack://mesto-project-bootcamp/./components/container.js","webpack://mesto-project-bootcamp/./components/card.js","webpack://mesto-project-bootcamp/./components/modal.js","webpack://mesto-project-bootcamp/./components/profile.js","webpack://mesto-project-bootcamp/./components/index.js"],"sourcesContent":["const settings = {\r\n    inputError: 'popup__form-input_error',\r\n    errorActive: '-error_active',\r\n    errorInactive: 'popup__form-submit_inactive',\r\n    error: '-error',\r\n    cleanString: ''\r\n}\r\n\r\nfunction showInputError(formElement, inputElem, errMessage) {\r\n    const errorElement = formElement.querySelector(`.${inputElem.id}${settings.error}`);\r\n    inputElem.classList.add(settings.inputError);\r\n    errorElement.textContent = errMessage\r\n    errorElement.classList.add(`${inputElem.id}${settings.errorActive}`);\r\n};\r\n\r\nfunction hideInputError(formElement, inputElem) {\r\n    const errorElement = formElement.querySelector(`.${inputElem.id}${settings.error}`);\r\n    inputElem.classList.remove(settings.inputError);\r\n    errorElement.classList.remove(`${inputElem.id}${settings.errorActive}`);\r\n    errorElement.textContent = settings.cleanString\r\n};\r\n\r\nfunction valid(formElement, inputElem) {\r\n    if (!inputElem.validity.valid) {\r\n        showInputError(formElement, inputElem, inputElem.validationMessage);\r\n    } else {\r\n        hideInputError(formElement, inputElem);\r\n    }\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n    return inputList.some((inputElem) => {\r\n        return !inputElem.validity.valid\r\n    })\r\n}\r\n\r\nexport function toggleButtonState(inputList, buttonElement) {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.classList.add(settings.errorInactive);\r\n        buttonElement.setAttribute('disabled', true)\r\n    } else {\r\n        buttonElement.classList.remove(settings.errorInactive);\r\n        buttonElement.removeAttribute('disabled', true)\r\n    }\r\n};\r\n\r\nexport function enableValidation() {\r\n    const formList = Array.from(document.querySelectorAll('.popup__form'))\r\n    formList.forEach((formElem) => {\r\n        setEventListeners(formElem)\r\n    })\r\n}\r\nfunction setEventListeners(formElement) {\r\n    const inputList = Array.from(formElement.querySelectorAll('.popup__form-input'));\r\n    const buttonElement = formElement.querySelector('.popup__form-submit');\r\n    toggleButtonState(inputList, buttonElement)\r\n    inputList.forEach((inputElem) => {\r\n        inputElem.addEventListener('input', () => {\r\n            valid(formElement, inputElem)\r\n            toggleButtonState(inputList, buttonElement)\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport function resetValidation(formElement) {\r\n    const inputList = Array.from(formElement.querySelectorAll('.popup__form-input'));\r\n    const buttonElement = formElement.querySelector('.popup__form-submit');\r\n    inputList.forEach((inputElem) => {\r\n        valid(formElement, inputElem)\r\n        hideInputError(formElement, inputElem)\r\n    })\r\n    toggleButtonState(inputList, buttonElement)\r\n}\r\n","const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/wbf-cohort-3/',\r\n    header: {\r\n        authorization: '9035a3ae-3144-4c5d-a2fb-c77d4c0cdff6'\r\n    },\r\n    headers: {\r\n        authorization: '9035a3ae-3144-4c5d-a2fb-c77d4c0cdff6',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nfunction checkResponse(res) {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return res.json()\r\n        .then((err) => {\r\n            err.statusCode = res.status\r\n            return Promise.reject(err);\r\n        })\r\n}\r\n\r\nexport const api = {\r\n    getProfile: () => {\r\n        return fetch(`${config.baseUrl}users/me`, {\r\n            method: 'GET',\r\n            headers: config.header\r\n\r\n        })\r\n            .then(checkResponse)\r\n    },\r\n    toggleLike: (cardId, isLiked) => {\r\n        return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n            method: isLiked ? 'DELETE' : 'PUT',\r\n            headers: config.header\r\n        })\r\n            .then(checkResponse)\r\n    },\r\n    uploadCard: (card) => {\r\n        return fetch(`${config.baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: config.headers,\r\n            body: JSON.stringify(\r\n                card\r\n            )\r\n        })\r\n            .then(checkResponse)\r\n    },\r\n    editProfile: (profile) => {\r\n        return fetch(`${config.baseUrl}users/me`, {\r\n            method: 'PATCH',\r\n            headers: config.headers,\r\n            body: JSON.stringify(\r\n                profile\r\n            )\r\n        })\r\n            .then(checkResponse)\r\n    },\r\n    getCards: () => {\r\n        return fetch(`${config.baseUrl}cards`, {\r\n            method: 'GET',\r\n            headers: config.header\r\n        })\r\n            .then(checkResponse)\r\n    },\r\n    cardDelete: (cardId) => {\r\n\r\n        return fetch(`${config.baseUrl}cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: config.header\r\n        })\r\n            .then(checkResponse)\r\n    },\r\n    changeAvatar: (link) => {\r\n        return fetch(`${config.baseUrl}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: config.headers,\r\n            body: JSON.stringify({\r\n                avatar: `${link}`\r\n            })\r\n        })\r\n            .then(checkResponse)\r\n    }\r\n}","const elements = document.querySelector('.elements')\r\n\r\nexport function addCardToContainer(cardNode) {\r\n    elements.prepend(cardNode)\r\n}","import { api } from './api.js';\r\nimport { openViewModal, openDeleteCardConfirm } from './modal.js'\r\nimport { addCardToContainer } from './container.js';\r\n\r\nconst element = document.querySelector('#element').content\r\n\r\nfunction handleImageClick(evt) {\r\n    const { target: { src, alt } } = evt;\r\n    openViewModal(src, alt);\r\n};\r\n\r\n\r\nfunction handleLikeClick(evt) {\r\n    const card = evt.target.closest('.element')\r\n    const likesCount = card.querySelector('.element__likes-count')\r\n    api.toggleLike(card.id, card._likes.includes(card._userId))\r\n        .then((res) => {\r\n            card._likes = res.likes.map((item) => item._id)\r\n            likesCount.textContent = card._likes.length\r\n            if (card._likes.includes(card._userId)) {\r\n                evt.target.classList.add('element__like_black')\r\n            } else {\r\n                evt.target.classList.remove('element__like_black')\r\n            }\r\n        })\r\n        .catch(console.error);\r\n}\r\n\r\nfunction handleDeleteClick(evt) {\r\n    const card = evt.target.closest('.element')\r\n    sessionStorage.setItem('itemToDelete', card.id)\r\n    openDeleteCardConfirm()\r\n}\r\n\r\n\r\nexport function makeCard(cardObj, user_id) {\r\n    const card = element.querySelector('.element').cloneNode(true)\r\n    const elementPhoto = card.querySelector('.element__foto')\r\n    card.querySelector('.element__title').textContent = cardObj.name\r\n    const likesCount = card.querySelector('.element__likes-count')\r\n    likesCount.textContent = cardObj.likes.length\r\n    elementPhoto.src = cardObj.link\r\n    elementPhoto.alt = cardObj.name\r\n    const likeButton = card.querySelector('.element__like')\r\n    card.id = cardObj._id;\r\n    card._userId = user_id;\r\n    card._likes = cardObj.likes.map((item) => item._id)\r\n    card._ownerId = cardObj.owner._id\r\n    const trashButton = card.querySelector('.element__trash')\r\n    if (cardObj.owner._id !== card._userId) {\r\n        trashButton.classList.add('element__trash_inactive')\r\n    }\r\n    cardObj.likes.forEach(el => {\r\n        if (el._id === card._userId) {\r\n            likeButton.classList.add('element__like_black')\r\n        }\r\n    })\r\n    trashButton.addEventListener('click', handleDeleteClick)\r\n    likeButton.addEventListener('click', handleLikeClick)\r\n    elementPhoto.addEventListener('click', handleImageClick)\r\n    return card\r\n}\r\n\r\n\r\nexport function addCard(card) {\r\n    addCardToContainer(makeCard(card, sessionStorage.getItem(\"userId\")))\r\n}","import { resetValidation } from \"./validate\";\r\nimport { addCard } from \"./card\";\r\nimport { getProfileData, setUserData } from \"./profile\";\r\nimport { api } from \"./api\";\r\n\r\nconst cardPhoto = document.querySelector('.popup__foto')\r\nconst popupDescription = document.querySelector('.popup__description')\r\nconst popupImage = document.querySelector('.popup_image')\r\nconst placeFormTitleInput = document.querySelector('.popup__form-input_place-title');\r\nconst placeFormSubTitleInput = document.querySelector('.popup__form-input_place-subtitle');\r\nconst profileEditNameInput = document.querySelector('.popup__form-input_edit-title')\r\nconst profileEditAboutInput = document.querySelector('.popup__form-input_edit_subtitle')\r\nconst newPlaceForm = document.querySelector('.popup__form_create')\r\nconst profileEditForm = document.querySelector('.popup__form_edit')\r\nconst popupNewPlace = document.querySelector('.popup_new-place')\r\nconst popupCloseButtons = document.querySelectorAll('.popup__button-close')\r\nconst avatarForm = document.querySelector('.popup__avatar_form')\r\nconst popupProfileEdit = document.querySelector('.popup_profile_edit');\r\nconst avatarInput = document.querySelector('.popup__form-input_edit_avatar')\r\nconst avatarPopup = document.querySelector('.popup_avatar_edit')\r\nconst popupConfirmDelete = document.querySelector('.popup_delete')\r\nconst deleteForm = document.querySelector('.popup__form_delete')\r\nconst profileSaveButton = document.querySelector('.popup__form-submit-save')\r\nconst avatarSaveButton = document.querySelector('.popup__form-submit-avatar')\r\nconst cardSaveButton = document.querySelector('.popup__form-submit-create')\r\n\r\nexport function openPopup(popup) {\r\n    popup.classList.add('popup_opened')\r\n    document.addEventListener('keyup', handleEsc);\r\n}\r\n\r\nexport function closePopup(popup) {\r\n    popup.classList.remove('popup_opened')\r\n    document.removeEventListener('keyup', handleEsc);\r\n}\r\n\r\nfunction handleOverlayClick(evt) {\r\n    if (evt.target === evt.currentTarget) {\r\n        closePopup(evt.target);\r\n    };\r\n};\r\n\r\nfunction handleCloseClick(elem) {\r\n    const popup = elem.target.closest('.popup')\r\n    closePopup(popup)\r\n}\r\n\r\nexport function setButtonText(button, buttonText = \"Сохранить\") {\r\n    button.textContent = buttonText;\r\n}\r\n\r\nfunction handleEsc(evt) {\r\n    if (evt.key === 'Escape') {\r\n        const popupOpened = document.querySelector('.popup_opened')\r\n        popupOpened && closePopup(popupOpened)\r\n    }\r\n}\r\n\r\nexport function openViewModal(src, alt) {\r\n    cardPhoto.src = src\r\n    cardPhoto.alt = alt\r\n    popupDescription.textContent = alt\r\n    openPopup(popupImage)\r\n};\r\n\r\nfunction closePopupDeleteCard() {\r\n    closePopup(popupConfirmDelete)\r\n    sessionStorage.removeItem('itemToDelete');\r\n}\r\n\r\n\r\nfunction handleDeleteSubmitClick(evt) {\r\n    evt.preventDefault()\r\n    const itemToDelete = sessionStorage.getItem('itemToDelete')\r\n    const deletedItem = document.getElementById(itemToDelete)\r\n    api.cardDelete(itemToDelete)\r\n        .then(() => {\r\n            deletedItem.remove()\r\n            closePopupDeleteCard()\r\n        })\r\n        .catch(console.error)\r\n}\r\n\r\nexport function openDeleteCardConfirm() {\r\n    if (sessionStorage.getItem('itemToDelete')) {\r\n        openPopup(popupConfirmDelete)\r\n    }\r\n}\r\n\r\nexport function openEditAvatar() {\r\n    cleanAvatarForm()\r\n    resetValidation(avatarForm)\r\n    openPopup(avatarPopup)\r\n}\r\n\r\nexport function cleanNewPlaceForm() {\r\n    placeFormTitleInput.value = ''\r\n    placeFormSubTitleInput.value = ''\r\n}\r\n\r\nfunction cleanAvatarForm() {\r\n    avatarInput.value = ''\r\n}\r\n\r\nfunction getNewCardData() {\r\n    const card = {}\r\n    card.name = placeFormTitleInput.value\r\n    card.link = placeFormSubTitleInput.value\r\n    return card\r\n}\r\n\r\nfunction getNewProfileData() {\r\n    const profile = {}\r\n    profile.name = profileEditNameInput.value\r\n    profile.about = profileEditAboutInput.value\r\n    return profile\r\n}\r\n\r\n\r\nfunction getAvatar() {\r\n    const avatar = avatarInput.value\r\n    return avatar\r\n}\r\n\r\nfunction setProfileInputs(user) {\r\n    profileEditNameInput.value = user.name\r\n    profileEditAboutInput.value = user.about\r\n}\r\n\r\nexport function openEditProfilePopup() {\r\n    setProfileInputs(getProfileData())\r\n    resetValidation(profileEditForm)\r\n    openPopup(popupProfileEdit)\r\n}\r\n\r\nfunction handleProfileSubmit(evt) {\r\n    evt.preventDefault()\r\n    setButtonText(profileSaveButton, 'Cохранение...')\r\n    api.editProfile(getNewProfileData())\r\n        .then((profile) => {\r\n            setUserData(profile)\r\n            closePopup(popupProfileEdit)\r\n        })\r\n        .catch(console.error)\r\n        .finally(() => profileSaveButton.textContent = 'Сохранить')\r\n}\r\n\r\nfunction handleProfileAvatar(evt) {\r\n    evt.preventDefault()\r\n    setButtonText(avatarSaveButton, 'Cохранение...')\r\n    api.changeAvatar(getAvatar())\r\n        .then(profile => {\r\n            setUserData(profile)\r\n            cleanAvatarForm()\r\n            closePopup(avatarPopup)\r\n        })\r\n        .catch(console.error)\r\n        .finally(() => setButtonText(avatarSaveButton))\r\n}\r\n\r\nexport function openNewPlacePopup() {\r\n    cleanNewPlaceForm()\r\n    resetValidation(newPlaceForm)\r\n    openPopup(popupNewPlace)\r\n}\r\n\r\nfunction handleNewPlaceSubmit(evt) {\r\n    evt.preventDefault()\r\n    setButtonText(cardSaveButton, 'Cохранение...')\r\n    api.uploadCard(getNewCardData())\r\n        .then((res) => {\r\n            addCard(res)\r\n            closePopup(popupNewPlace)\r\n            cleanNewPlaceForm()\r\n        })\r\n        .catch(console.error)\r\n        .finally(() => setButtonText(cardSaveButton))\r\n}\r\n\r\nexport function setModalsEventListeners() {\r\n\r\n    newPlaceForm.addEventListener('submit', handleNewPlaceSubmit)\r\n    profileEditForm.addEventListener('submit', handleProfileSubmit)\r\n    avatarForm.addEventListener('submit', handleProfileAvatar)\r\n    deleteForm.addEventListener('submit', handleDeleteSubmitClick)\r\n    Array.from(document.querySelectorAll('.popup')).forEach((popup) => {\r\n        popup.addEventListener('click', handleOverlayClick)\r\n    });\r\n    Array.from(popupCloseButtons).forEach((buttonClose) => {\r\n        buttonClose.addEventListener('click', handleCloseClick)\r\n    });\r\n}\r\n","const profileTitle = document.querySelector('.profile__title');\r\nconst profileSubtitle = document.querySelector('.profile__subtitle');\r\nconst profileAvatar = document.querySelector('.profile__image')\r\n\r\nexport function getProfileData() {\r\n    const name = profileTitle.textContent\r\n    const about = profileSubtitle.textContent\r\n    return { name, about }\r\n}\r\n\r\nexport function setUserData(user) {\r\n    profileTitle.textContent = user.name\r\n    profileSubtitle.textContent = user.about\r\n    profileAvatar.src = user.avatar\r\n}","import '../src/pages/index.css';\r\nimport { openNewPlacePopup, setModalsEventListeners, openEditProfilePopup, openEditAvatar } from './modal.js'\r\nimport { enableValidation } from './validate.js'\r\nimport { api } from './api.js';\r\nimport { makeCard } from './card';\r\nimport { addCardToContainer } from './container';\r\nimport { setUserData } from './profile';\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst newPlaceButton = document.querySelector('.profile__add-button')\r\nconst avatarEdit = document.querySelector('.profile__avatar')\r\n\r\nPromise.all([api.getProfile(), api.getCards()])\r\n    .then(([user, cards]) => {\r\n        setUserData(user)\r\n        sessionStorage.setItem('userId', user._id)\r\n        cards.forEach((item) => addCardToContainer(makeCard(item, user._id)))\r\n    })\r\n    .catch(console.error);\r\n\r\nenableValidation()\r\nsetModalsEventListeners()\r\n\r\nprofileEditButton.addEventListener('click', openEditProfilePopup);\r\n\r\nnewPlaceButton.addEventListener('click', openNewPlacePopup);\r\n\r\navatarEdit.addEventListener('click', openEditAvatar);"],"names":["settings","hideInputError","formElement","inputElem","errorElement","querySelector","id","classList","remove","textContent","valid","validity","errMessage","add","showInputError","validationMessage","toggleButtonState","inputList","buttonElement","some","hasInvalidInput","removeAttribute","setAttribute","resetValidation","Array","from","querySelectorAll","forEach","config","baseUrl","header","authorization","headers","checkResponse","res","ok","json","then","err","statusCode","status","Promise","reject","elements","document","addCardToContainer","cardNode","prepend","element","content","handleImageClick","evt","src","alt","target","cardPhoto","popupDescription","openPopup","popupImage","handleLikeClick","cardId","isLiked","card","closest","likesCount","_likes","includes","_userId","fetch","method","likes","map","item","_id","length","catch","console","error","handleDeleteClick","sessionStorage","setItem","getItem","popupConfirmDelete","makeCard","cardObj","user_id","cloneNode","elementPhoto","name","link","likeButton","_ownerId","owner","trashButton","el","addEventListener","profileTitle","profileSubtitle","profileAvatar","setUserData","user","about","avatar","placeFormTitleInput","placeFormSubTitleInput","profileEditNameInput","profileEditAboutInput","newPlaceForm","profileEditForm","popupNewPlace","popupCloseButtons","avatarForm","popupProfileEdit","avatarInput","avatarPopup","deleteForm","profileSaveButton","avatarSaveButton","cardSaveButton","popup","handleEsc","closePopup","removeEventListener","handleOverlayClick","currentTarget","handleCloseClick","elem","setButtonText","button","buttonText","key","popupOpened","cleanNewPlaceForm","value","cleanAvatarForm","profileEditButton","newPlaceButton","avatarEdit","all","cards","formElem","preventDefault","body","JSON","stringify","api","addCard","finally","profile","itemToDelete","deletedItem","getElementById","removeItem","buttonClose"],"sourceRoot":""}